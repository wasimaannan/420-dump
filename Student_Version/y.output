Terminals unused in grammar

   DO
   BREAK
   CHAR
   DOUBLE
   SWITCH
   CASE
   DEFAULT
   CONTINUE


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: var_declaration
    5     | func_definition
    6     | error

    7 func_definition: type_specifier id_name LPAREN parameter_list RPAREN enter_func compound_statement
    8                | type_specifier id_name LPAREN RPAREN enter_func compound_statement

    9 enter_func: /* empty */

   10 parameter_list: parameter_list COMMA type_specifier ID
   11               | parameter_list COMMA type_specifier
   12               | type_specifier ID
   13               | type_specifier

   14 compound_statement: LCURL enter_scope_variables statements RCURL
   15                   | LCURL enter_scope_variables RCURL

   16 enter_scope_variables: /* empty */

   17 var_declaration: type_specifier declaration_list SEMICOLON

   18 type_specifier: INT
   19               | FLOAT
   20               | VOID

   21 declaration_list: declaration_list COMMA id_name
   22                 | declaration_list COMMA id_name LTHIRD CONST_INT RTHIRD
   23                 | id_name
   24                 | id_name LTHIRD CONST_INT RTHIRD

   25 id_name: ID

   26 statements: statement
   27           | statements statement
   28           | error
   29           | statements error

   30 statement: var_declaration
   31          | func_definition
   32          | expression_statement
   33          | compound_statement
   34          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   35          | IF LPAREN expression RPAREN statement
   36          | IF LPAREN expression RPAREN statement ELSE statement
   37          | WHILE LPAREN expression RPAREN statement
   38          | PRINTLN LPAREN id_name RPAREN SEMICOLON
   39          | RETURN expression SEMICOLON

   40 expression_statement: SEMICOLON
   41                     | expression SEMICOLON

   42 variable: id_name
   43         | id_name LTHIRD expression RTHIRD

   44 expression: logic_expression
   45           | variable ASSIGNOP logic_expression

   46 logic_expression: rel_expression
   47                 | rel_expression LOGICOP rel_expression

   48 rel_expression: simple_expression
   49               | simple_expression RELOP simple_expression

   50 simple_expression: term
   51                  | simple_expression ADDOP term

   52 term: unary_expression
   53     | term MULOP unary_expression

   54 unary_expression: ADDOP unary_expression
   55                 | NOT unary_expression
   56                 | factor

   57 factor: variable
   58       | id_name LPAREN argument_list RPAREN
   59       | LPAREN expression RPAREN
   60       | CONST_INT
   61       | CONST_FLOAT
   62       | variable INCOP
   63       | variable DECOP

   64 argument_list: arguments
   65              | /* empty */

   66 arguments: arguments COMMA logic_expression
   67          | logic_expression


Terminals, with rules where they appear

$end (0) 0
error (256) 6 28 29
IF (258) 35 36
ELSE (259) 36
FOR (260) 34
WHILE (261) 37
DO (262)
BREAK (263)
INT (264) 18
CHAR (265)
FLOAT (266) 19
DOUBLE (267)
VOID (268) 20
RETURN (269) 39
SWITCH (270)
CASE (271)
DEFAULT (272)
CONTINUE (273)
PRINTLN (274) 38
ADDOP (275) 51 54
MULOP (276) 53
INCOP (277) 62
DECOP (278) 63
RELOP (279) 49
ASSIGNOP (280) 45
LOGICOP (281) 47
NOT (282) 55
LPAREN (283) 7 8 34 35 36 37 38 58 59
RPAREN (284) 7 8 34 35 36 37 38 58 59
LCURL (285) 14 15
RCURL (286) 14 15
LTHIRD (287) 22 24 43
RTHIRD (288) 22 24 43
COMMA (289) 10 11 21 22 66
SEMICOLON (290) 17 38 39 40 41
CONST_INT (291) 22 24 60
CONST_FLOAT (292) 61
ID (293) 10 12 25
LOWER_THAN_ELSE (294)


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
start (41)
    on left: 1, on right: 0
program (42)
    on left: 2 3, on right: 1 2
unit (43)
    on left: 4 5 6, on right: 2 3
func_definition (44)
    on left: 7 8, on right: 5 31
enter_func (45)
    on left: 9, on right: 7 8
parameter_list (46)
    on left: 10 11 12 13, on right: 7 10 11
compound_statement (47)
    on left: 14 15, on right: 7 8 33
enter_scope_variables (48)
    on left: 16, on right: 14 15
var_declaration (49)
    on left: 17, on right: 4 30
type_specifier (50)
    on left: 18 19 20, on right: 7 8 10 11 12 13 17
declaration_list (51)
    on left: 21 22 23 24, on right: 17 21 22
id_name (52)
    on left: 25, on right: 7 8 21 22 23 24 38 42 43 58
statements (53)
    on left: 26 27 28 29, on right: 14 27 29
statement (54)
    on left: 30 31 32 33 34 35 36 37 38 39, on right: 26 27 34 35 36
    37
expression_statement (55)
    on left: 40 41, on right: 32 34
variable (56)
    on left: 42 43, on right: 45 57 62 63
expression (57)
    on left: 44 45, on right: 34 35 36 37 39 41 43 59
logic_expression (58)
    on left: 46 47, on right: 44 45 66 67
rel_expression (59)
    on left: 48 49, on right: 46 47
simple_expression (60)
    on left: 50 51, on right: 48 49 51
term (61)
    on left: 52 53, on right: 50 51 53
unary_expression (62)
    on left: 54 55 56, on right: 52 53 54 55
factor (63)
    on left: 57 58 59 60 61 62 63, on right: 56
argument_list (64)
    on left: 64 65, on right: 58
arguments (65)
    on left: 66 67, on right: 64 66


State 0

    0 $accept: . start $end

    error  shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    VOID   shift, and go to state 4

    start            go to state 5
    program          go to state 6
    unit             go to state 7
    func_definition  go to state 8
    var_declaration  go to state 9
    type_specifier   go to state 10


State 1

    6 unit: error .

    $default  reduce using rule 6 (unit)


State 2

   18 type_specifier: INT .

    $default  reduce using rule 18 (type_specifier)


State 3

   19 type_specifier: FLOAT .

    $default  reduce using rule 19 (type_specifier)


State 4

   20 type_specifier: VOID .

    $default  reduce using rule 20 (type_specifier)


State 5

    0 $accept: start . $end

    $end  shift, and go to state 11


State 6

    1 start: program .
    2 program: program . unit

    error  shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    VOID   shift, and go to state 4

    $end  reduce using rule 1 (start)

    unit             go to state 12
    func_definition  go to state 8
    var_declaration  go to state 9
    type_specifier   go to state 10


State 7

    3 program: unit .

    $default  reduce using rule 3 (program)


State 8

    5 unit: func_definition .

    $default  reduce using rule 5 (unit)


State 9

    4 unit: var_declaration .

    $default  reduce using rule 4 (unit)


State 10

    7 func_definition: type_specifier . id_name LPAREN parameter_list RPAREN enter_func compound_statement
    8                | type_specifier . id_name LPAREN RPAREN enter_func compound_statement
   17 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 13

    declaration_list  go to state 14
    id_name           go to state 15


State 11

    0 $accept: start $end .

    $default  accept


State 12

    2 program: program unit .

    $default  reduce using rule 2 (program)


State 13

   25 id_name: ID .

    $default  reduce using rule 25 (id_name)


State 14

   17 var_declaration: type_specifier declaration_list . SEMICOLON
   21 declaration_list: declaration_list . COMMA id_name
   22                 | declaration_list . COMMA id_name LTHIRD CONST_INT RTHIRD

    COMMA      shift, and go to state 16
    SEMICOLON  shift, and go to state 17


State 15

    7 func_definition: type_specifier id_name . LPAREN parameter_list RPAREN enter_func compound_statement
    8                | type_specifier id_name . LPAREN RPAREN enter_func compound_statement
   23 declaration_list: id_name .
   24                 | id_name . LTHIRD CONST_INT RTHIRD

    LPAREN  shift, and go to state 18
    LTHIRD  shift, and go to state 19

    $default  reduce using rule 23 (declaration_list)


State 16

   21 declaration_list: declaration_list COMMA . id_name
   22                 | declaration_list COMMA . id_name LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 13

    id_name  go to state 20


State 17

   17 var_declaration: type_specifier declaration_list SEMICOLON .

    $default  reduce using rule 17 (var_declaration)


State 18

    7 func_definition: type_specifier id_name LPAREN . parameter_list RPAREN enter_func compound_statement
    8                | type_specifier id_name LPAREN . RPAREN enter_func compound_statement

    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    VOID    shift, and go to state 4
    RPAREN  shift, and go to state 21

    parameter_list  go to state 22
    type_specifier  go to state 23


State 19

   24 declaration_list: id_name LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 24


State 20

   21 declaration_list: declaration_list COMMA id_name .
   22                 | declaration_list COMMA id_name . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 25

    $default  reduce using rule 21 (declaration_list)


State 21

    8 func_definition: type_specifier id_name LPAREN RPAREN . enter_func compound_statement

    $default  reduce using rule 9 (enter_func)

    enter_func  go to state 26


State 22

    7 func_definition: type_specifier id_name LPAREN parameter_list . RPAREN enter_func compound_statement
   10 parameter_list: parameter_list . COMMA type_specifier ID
   11               | parameter_list . COMMA type_specifier

    RPAREN  shift, and go to state 27
    COMMA   shift, and go to state 28


State 23

   12 parameter_list: type_specifier . ID
   13               | type_specifier .

    ID  shift, and go to state 29

    $default  reduce using rule 13 (parameter_list)


State 24

   24 declaration_list: id_name LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 30


State 25

   22 declaration_list: declaration_list COMMA id_name LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 31


State 26

    8 func_definition: type_specifier id_name LPAREN RPAREN enter_func . compound_statement

    LCURL  shift, and go to state 32

    compound_statement  go to state 33


State 27

    7 func_definition: type_specifier id_name LPAREN parameter_list RPAREN . enter_func compound_statement

    $default  reduce using rule 9 (enter_func)

    enter_func  go to state 34


State 28

   10 parameter_list: parameter_list COMMA . type_specifier ID
   11               | parameter_list COMMA . type_specifier

    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    VOID   shift, and go to state 4

    type_specifier  go to state 35


State 29

   12 parameter_list: type_specifier ID .

    $default  reduce using rule 12 (parameter_list)


State 30

   24 declaration_list: id_name LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 24 (declaration_list)


State 31

   22 declaration_list: declaration_list COMMA id_name LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 36


State 32

   14 compound_statement: LCURL . enter_scope_variables statements RCURL
   15                   | LCURL . enter_scope_variables RCURL

    $default  reduce using rule 16 (enter_scope_variables)

    enter_scope_variables  go to state 37


State 33

    8 func_definition: type_specifier id_name LPAREN RPAREN enter_func compound_statement .

    $default  reduce using rule 8 (func_definition)


State 34

    7 func_definition: type_specifier id_name LPAREN parameter_list RPAREN enter_func . compound_statement

    LCURL  shift, and go to state 32

    compound_statement  go to state 38


State 35

   10 parameter_list: parameter_list COMMA type_specifier . ID
   11               | parameter_list COMMA type_specifier .

    ID  shift, and go to state 39

    $default  reduce using rule 11 (parameter_list)


State 36

   22 declaration_list: declaration_list COMMA id_name LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 22 (declaration_list)


State 37

   14 compound_statement: LCURL enter_scope_variables . statements RCURL
   15                   | LCURL enter_scope_variables . RCURL

    error        shift, and go to state 40
    IF           shift, and go to state 41
    FOR          shift, and go to state 42
    WHILE        shift, and go to state 43
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    VOID         shift, and go to state 4
    RETURN       shift, and go to state 44
    PRINTLN      shift, and go to state 45
    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    LCURL        shift, and go to state 32
    RCURL        shift, and go to state 49
    SEMICOLON    shift, and go to state 50
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 13

    func_definition       go to state 53
    compound_statement    go to state 54
    var_declaration       go to state 55
    type_specifier        go to state 10
    id_name               go to state 56
    statements            go to state 57
    statement             go to state 58
    expression_statement  go to state 59
    variable              go to state 60
    expression            go to state 61
    logic_expression      go to state 62
    rel_expression        go to state 63
    simple_expression     go to state 64
    term                  go to state 65
    unary_expression      go to state 66
    factor                go to state 67


State 38

    7 func_definition: type_specifier id_name LPAREN parameter_list RPAREN enter_func compound_statement .

    $default  reduce using rule 7 (func_definition)


State 39

   10 parameter_list: parameter_list COMMA type_specifier ID .

    $default  reduce using rule 10 (parameter_list)


State 40

   28 statements: error .

    $default  reduce using rule 28 (statements)


State 41

   35 statement: IF . LPAREN expression RPAREN statement
   36          | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 68


State 42

   34 statement: FOR . LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 69


State 43

   37 statement: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 70


State 44

   39 statement: RETURN . expression SEMICOLON

    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 13

    id_name            go to state 56
    variable           go to state 60
    expression         go to state 71
    logic_expression   go to state 62
    rel_expression     go to state 63
    simple_expression  go to state 64
    term               go to state 65
    unary_expression   go to state 66
    factor             go to state 67


State 45

   38 statement: PRINTLN . LPAREN id_name RPAREN SEMICOLON

    LPAREN  shift, and go to state 72


State 46

   54 unary_expression: ADDOP . unary_expression

    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 13

    id_name           go to state 56
    variable          go to state 73
    unary_expression  go to state 74
    factor            go to state 67


State 47

   55 unary_expression: NOT . unary_expression

    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 13

    id_name           go to state 56
    variable          go to state 73
    unary_expression  go to state 75
    factor            go to state 67


State 48

   59 factor: LPAREN . expression RPAREN

    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 13

    id_name            go to state 56
    variable           go to state 60
    expression         go to state 76
    logic_expression   go to state 62
    rel_expression     go to state 63
    simple_expression  go to state 64
    term               go to state 65
    unary_expression   go to state 66
    factor             go to state 67


State 49

   15 compound_statement: LCURL enter_scope_variables RCURL .

    $default  reduce using rule 15 (compound_statement)


State 50

   40 expression_statement: SEMICOLON .

    $default  reduce using rule 40 (expression_statement)


State 51

   60 factor: CONST_INT .

    $default  reduce using rule 60 (factor)


State 52

   61 factor: CONST_FLOAT .

    $default  reduce using rule 61 (factor)


State 53

   31 statement: func_definition .

    $default  reduce using rule 31 (statement)


State 54

   33 statement: compound_statement .

    $default  reduce using rule 33 (statement)


State 55

   30 statement: var_declaration .

    $default  reduce using rule 30 (statement)


State 56

   42 variable: id_name .
   43         | id_name . LTHIRD expression RTHIRD
   58 factor: id_name . LPAREN argument_list RPAREN

    LPAREN  shift, and go to state 77
    LTHIRD  shift, and go to state 78

    $default  reduce using rule 42 (variable)


State 57

   14 compound_statement: LCURL enter_scope_variables statements . RCURL
   27 statements: statements . statement
   29           | statements . error

    error        shift, and go to state 79
    IF           shift, and go to state 41
    FOR          shift, and go to state 42
    WHILE        shift, and go to state 43
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    VOID         shift, and go to state 4
    RETURN       shift, and go to state 44
    PRINTLN      shift, and go to state 45
    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    LCURL        shift, and go to state 32
    RCURL        shift, and go to state 80
    SEMICOLON    shift, and go to state 50
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 13

    func_definition       go to state 53
    compound_statement    go to state 54
    var_declaration       go to state 55
    type_specifier        go to state 10
    id_name               go to state 56
    statement             go to state 81
    expression_statement  go to state 59
    variable              go to state 60
    expression            go to state 61
    logic_expression      go to state 62
    rel_expression        go to state 63
    simple_expression     go to state 64
    term                  go to state 65
    unary_expression      go to state 66
    factor                go to state 67


State 58

   26 statements: statement .

    $default  reduce using rule 26 (statements)


State 59

   32 statement: expression_statement .

    $default  reduce using rule 32 (statement)


State 60

   45 expression: variable . ASSIGNOP logic_expression
   57 factor: variable .
   62       | variable . INCOP
   63       | variable . DECOP

    INCOP     shift, and go to state 82
    DECOP     shift, and go to state 83
    ASSIGNOP  shift, and go to state 84

    $default  reduce using rule 57 (factor)


State 61

   41 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 85


State 62

   44 expression: logic_expression .

    $default  reduce using rule 44 (expression)


State 63

   46 logic_expression: rel_expression .
   47                 | rel_expression . LOGICOP rel_expression

    LOGICOP  shift, and go to state 86

    $default  reduce using rule 46 (logic_expression)


State 64

   48 rel_expression: simple_expression .
   49               | simple_expression . RELOP simple_expression
   51 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 87
    RELOP  shift, and go to state 88

    $default  reduce using rule 48 (rel_expression)


State 65

   50 simple_expression: term .
   53 term: term . MULOP unary_expression

    MULOP  shift, and go to state 89

    $default  reduce using rule 50 (simple_expression)


State 66

   52 term: unary_expression .

    $default  reduce using rule 52 (term)


State 67

   56 unary_expression: factor .

    $default  reduce using rule 56 (unary_expression)


State 68

   35 statement: IF LPAREN . expression RPAREN statement
   36          | IF LPAREN . expression RPAREN statement ELSE statement

    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 13

    id_name            go to state 56
    variable           go to state 60
    expression         go to state 90
    logic_expression   go to state 62
    rel_expression     go to state 63
    simple_expression  go to state 64
    term               go to state 65
    unary_expression   go to state 66
    factor             go to state 67


State 69

   34 statement: FOR LPAREN . expression_statement expression_statement expression RPAREN statement

    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    SEMICOLON    shift, and go to state 50
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 13

    id_name               go to state 56
    expression_statement  go to state 91
    variable              go to state 60
    expression            go to state 61
    logic_expression      go to state 62
    rel_expression        go to state 63
    simple_expression     go to state 64
    term                  go to state 65
    unary_expression      go to state 66
    factor                go to state 67


State 70

   37 statement: WHILE LPAREN . expression RPAREN statement

    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 13

    id_name            go to state 56
    variable           go to state 60
    expression         go to state 92
    logic_expression   go to state 62
    rel_expression     go to state 63
    simple_expression  go to state 64
    term               go to state 65
    unary_expression   go to state 66
    factor             go to state 67


State 71

   39 statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 93


State 72

   38 statement: PRINTLN LPAREN . id_name RPAREN SEMICOLON

    ID  shift, and go to state 13

    id_name  go to state 94


State 73

   57 factor: variable .
   62       | variable . INCOP
   63       | variable . DECOP

    INCOP  shift, and go to state 82
    DECOP  shift, and go to state 83

    $default  reduce using rule 57 (factor)


State 74

   54 unary_expression: ADDOP unary_expression .

    $default  reduce using rule 54 (unary_expression)


State 75

   55 unary_expression: NOT unary_expression .

    $default  reduce using rule 55 (unary_expression)


State 76

   59 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 95


State 77

   58 factor: id_name LPAREN . argument_list RPAREN

    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 13

    $default  reduce using rule 65 (argument_list)

    id_name            go to state 56
    variable           go to state 73
    logic_expression   go to state 96
    rel_expression     go to state 63
    simple_expression  go to state 64
    term               go to state 65
    unary_expression   go to state 66
    factor             go to state 67
    argument_list      go to state 97
    arguments          go to state 98


State 78

   43 variable: id_name LTHIRD . expression RTHIRD

    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 13

    id_name            go to state 56
    variable           go to state 60
    expression         go to state 99
    logic_expression   go to state 62
    rel_expression     go to state 63
    simple_expression  go to state 64
    term               go to state 65
    unary_expression   go to state 66
    factor             go to state 67


State 79

   29 statements: statements error .

    $default  reduce using rule 29 (statements)


State 80

   14 compound_statement: LCURL enter_scope_variables statements RCURL .

    $default  reduce using rule 14 (compound_statement)


State 81

   27 statements: statements statement .

    $default  reduce using rule 27 (statements)


State 82

   62 factor: variable INCOP .

    $default  reduce using rule 62 (factor)


State 83

   63 factor: variable DECOP .

    $default  reduce using rule 63 (factor)


State 84

   45 expression: variable ASSIGNOP . logic_expression

    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 13

    id_name            go to state 56
    variable           go to state 73
    logic_expression   go to state 100
    rel_expression     go to state 63
    simple_expression  go to state 64
    term               go to state 65
    unary_expression   go to state 66
    factor             go to state 67


State 85

   41 expression_statement: expression SEMICOLON .

    $default  reduce using rule 41 (expression_statement)


State 86

   47 logic_expression: rel_expression LOGICOP . rel_expression

    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 13

    id_name            go to state 56
    variable           go to state 73
    rel_expression     go to state 101
    simple_expression  go to state 64
    term               go to state 65
    unary_expression   go to state 66
    factor             go to state 67


State 87

   51 simple_expression: simple_expression ADDOP . term

    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 13

    id_name           go to state 56
    variable          go to state 73
    term              go to state 102
    unary_expression  go to state 66
    factor            go to state 67


State 88

   49 rel_expression: simple_expression RELOP . simple_expression

    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 13

    id_name            go to state 56
    variable           go to state 73
    simple_expression  go to state 103
    term               go to state 65
    unary_expression   go to state 66
    factor             go to state 67


State 89

   53 term: term MULOP . unary_expression

    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 13

    id_name           go to state 56
    variable          go to state 73
    unary_expression  go to state 104
    factor            go to state 67


State 90

   35 statement: IF LPAREN expression . RPAREN statement
   36          | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 105


State 91

   34 statement: FOR LPAREN expression_statement . expression_statement expression RPAREN statement

    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    SEMICOLON    shift, and go to state 50
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 13

    id_name               go to state 56
    expression_statement  go to state 106
    variable              go to state 60
    expression            go to state 61
    logic_expression      go to state 62
    rel_expression        go to state 63
    simple_expression     go to state 64
    term                  go to state 65
    unary_expression      go to state 66
    factor                go to state 67


State 92

   37 statement: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 107


State 93

   39 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 39 (statement)


State 94

   38 statement: PRINTLN LPAREN id_name . RPAREN SEMICOLON

    RPAREN  shift, and go to state 108


State 95

   59 factor: LPAREN expression RPAREN .

    $default  reduce using rule 59 (factor)


State 96

   67 arguments: logic_expression .

    $default  reduce using rule 67 (arguments)


State 97

   58 factor: id_name LPAREN argument_list . RPAREN

    RPAREN  shift, and go to state 109


State 98

   64 argument_list: arguments .
   66 arguments: arguments . COMMA logic_expression

    COMMA  shift, and go to state 110

    $default  reduce using rule 64 (argument_list)


State 99

   43 variable: id_name LTHIRD expression . RTHIRD

    RTHIRD  shift, and go to state 111


State 100

   45 expression: variable ASSIGNOP logic_expression .

    $default  reduce using rule 45 (expression)


State 101

   47 logic_expression: rel_expression LOGICOP rel_expression .

    $default  reduce using rule 47 (logic_expression)


State 102

   51 simple_expression: simple_expression ADDOP term .
   53 term: term . MULOP unary_expression

    MULOP  shift, and go to state 89

    $default  reduce using rule 51 (simple_expression)


State 103

   49 rel_expression: simple_expression RELOP simple_expression .
   51 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 87

    $default  reduce using rule 49 (rel_expression)


State 104

   53 term: term MULOP unary_expression .

    $default  reduce using rule 53 (term)


State 105

   35 statement: IF LPAREN expression RPAREN . statement
   36          | IF LPAREN expression RPAREN . statement ELSE statement

    IF           shift, and go to state 41
    FOR          shift, and go to state 42
    WHILE        shift, and go to state 43
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    VOID         shift, and go to state 4
    RETURN       shift, and go to state 44
    PRINTLN      shift, and go to state 45
    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    LCURL        shift, and go to state 32
    SEMICOLON    shift, and go to state 50
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 13

    func_definition       go to state 53
    compound_statement    go to state 54
    var_declaration       go to state 55
    type_specifier        go to state 10
    id_name               go to state 56
    statement             go to state 112
    expression_statement  go to state 59
    variable              go to state 60
    expression            go to state 61
    logic_expression      go to state 62
    rel_expression        go to state 63
    simple_expression     go to state 64
    term                  go to state 65
    unary_expression      go to state 66
    factor                go to state 67


State 106

   34 statement: FOR LPAREN expression_statement expression_statement . expression RPAREN statement

    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 13

    id_name            go to state 56
    variable           go to state 60
    expression         go to state 113
    logic_expression   go to state 62
    rel_expression     go to state 63
    simple_expression  go to state 64
    term               go to state 65
    unary_expression   go to state 66
    factor             go to state 67


State 107

   37 statement: WHILE LPAREN expression RPAREN . statement

    IF           shift, and go to state 41
    FOR          shift, and go to state 42
    WHILE        shift, and go to state 43
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    VOID         shift, and go to state 4
    RETURN       shift, and go to state 44
    PRINTLN      shift, and go to state 45
    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    LCURL        shift, and go to state 32
    SEMICOLON    shift, and go to state 50
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 13

    func_definition       go to state 53
    compound_statement    go to state 54
    var_declaration       go to state 55
    type_specifier        go to state 10
    id_name               go to state 56
    statement             go to state 114
    expression_statement  go to state 59
    variable              go to state 60
    expression            go to state 61
    logic_expression      go to state 62
    rel_expression        go to state 63
    simple_expression     go to state 64
    term                  go to state 65
    unary_expression      go to state 66
    factor                go to state 67


State 108

   38 statement: PRINTLN LPAREN id_name RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 115


State 109

   58 factor: id_name LPAREN argument_list RPAREN .

    $default  reduce using rule 58 (factor)


State 110

   66 arguments: arguments COMMA . logic_expression

    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 13

    id_name            go to state 56
    variable           go to state 73
    logic_expression   go to state 116
    rel_expression     go to state 63
    simple_expression  go to state 64
    term               go to state 65
    unary_expression   go to state 66
    factor             go to state 67


State 111

   43 variable: id_name LTHIRD expression RTHIRD .

    $default  reduce using rule 43 (variable)


State 112

   35 statement: IF LPAREN expression RPAREN statement .
   36          | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 117

    $default  reduce using rule 35 (statement)


State 113

   34 statement: FOR LPAREN expression_statement expression_statement expression . RPAREN statement

    RPAREN  shift, and go to state 118


State 114

   37 statement: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 37 (statement)


State 115

   38 statement: PRINTLN LPAREN id_name RPAREN SEMICOLON .

    $default  reduce using rule 38 (statement)


State 116

   66 arguments: arguments COMMA logic_expression .

    $default  reduce using rule 66 (arguments)


State 117

   36 statement: IF LPAREN expression RPAREN statement ELSE . statement

    IF           shift, and go to state 41
    FOR          shift, and go to state 42
    WHILE        shift, and go to state 43
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    VOID         shift, and go to state 4
    RETURN       shift, and go to state 44
    PRINTLN      shift, and go to state 45
    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    LCURL        shift, and go to state 32
    SEMICOLON    shift, and go to state 50
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 13

    func_definition       go to state 53
    compound_statement    go to state 54
    var_declaration       go to state 55
    type_specifier        go to state 10
    id_name               go to state 56
    statement             go to state 119
    expression_statement  go to state 59
    variable              go to state 60
    expression            go to state 61
    logic_expression      go to state 62
    rel_expression        go to state 63
    simple_expression     go to state 64
    term                  go to state 65
    unary_expression      go to state 66
    factor                go to state 67


State 118

   34 statement: FOR LPAREN expression_statement expression_statement expression RPAREN . statement

    IF           shift, and go to state 41
    FOR          shift, and go to state 42
    WHILE        shift, and go to state 43
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    VOID         shift, and go to state 4
    RETURN       shift, and go to state 44
    PRINTLN      shift, and go to state 45
    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    LCURL        shift, and go to state 32
    SEMICOLON    shift, and go to state 50
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 13

    func_definition       go to state 53
    compound_statement    go to state 54
    var_declaration       go to state 55
    type_specifier        go to state 10
    id_name               go to state 56
    statement             go to state 120
    expression_statement  go to state 59
    variable              go to state 60
    expression            go to state 61
    logic_expression      go to state 62
    rel_expression        go to state 63
    simple_expression     go to state 64
    term                  go to state 65
    unary_expression      go to state 66
    factor                go to state 67


State 119

   36 statement: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 36 (statement)


State 120

   34 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement .

    $default  reduce using rule 34 (statement)
