New ScopeTable with ID 1 created

At line no: 1 type_specifier : INT 

int

At line no: 1 type_specifier : INT 

int

At line no: 1 parameter_list : type_specifier ID 

int a

At line no: 1 type_specifier : FLOAT 

float

At line no: 1 parameter_list : parameter_list COMMA type_specifier ID 

int a,float b

New ScopeTable with ID 2 created

At line no: 2 variable : ID 

a

At line no: 2 factor : variable 

a

At line no: 2 unary_expression : factor 

a

At line no: 2 term : unary_expression 

a

At line no: 2 simple_expression : term 

a

At line no: 2 variable : ID 

b

At line no: 2 factor : variable 

b

At line no: 2 unary_expression : factor 

b

At line no: 2 term : unary_expression 

b

At line no: 2 simple_expression : simple_expression ADDOP term 

a+b

At line no: 2 rel_expression : simple_expression 

a+b

At line no: 2 logic_expression : rel_expression 

a+b

At line no: 2 expression : logic_expression 

a+b

At line no: 2 statement : RETURN expression SEMICOLON 

return a+b;

At line no: 2 statements : statement 

return a+b;

At line no: 3 compound_statement : LCURL statements RCURL 

{
return a+b;
}

################################

ScopeTable # 2
7 --> 
< a : ID >
Variable
Type: int

8 --> 
< b : ID >
Variable
Type: float


ScopeTable # 1
8 --> 
< func : ID >
Function Definition
Return Type: int
Number of Parameters: 2
Parameter Details: int a, float b

################################

Scopetable with ID 2 removed

At line no: 3 func_definition : type_specifier ID LPAREN parameter_list RPAREN compound_statement 

int func(int a,float b)
{
return a+b;
}

At line no: 3 unit : func_definition 

int func(int a,float b)
{
return a+b;
}

At line no: 3 program : unit 

int func(int a,float b)
{
return a+b;
}

At line no: 5 type_specifier : VOID 

void

New ScopeTable with ID 3 created

At line no: 6 type_specifier : INT 

int

At line no: 6 declaration_list : ID 

a

At line no: 6 declaration_list : declaration_list COMMA ID 

a,b

At line no: 6 declaration_list : declaration_list COMMA ID 

a,b,c

At line no: 6 declaration_list : declaration_list COMMA ID 

a,b,c,i

At line no: 6 var_declaration : type_specifier declaration_list SEMICOLON 

int a,b,c,i;

At line no: 6 statement : var_declaration 

int a,b,c,i;

At line no: 6 statements : statement 

int a,b,c,i;

At line no: 7 type_specifier : INT 

int

At line no: 7 declaration_list : ID 

e

At line no: 7 declaration_list : declaration_list COMMA ID LTHIRD CONST_INT RTHIRD 

e,f[10]

At line no: 7 declaration_list : declaration_list COMMA ID LTHIRD CONST_INT RTHIRD 

e,f[10],g[11]

At line no: 7 var_declaration : type_specifier declaration_list SEMICOLON 

int e,f[10],g[11];

At line no: 7 statement : var_declaration 

int e,f[10],g[11];

At line no: 7 statements : statements statement 

int a,b,c,i;
int e,f[10],g[11];

At line no: 8 variable : ID 

a

At line no: 8 factor : CONST_INT 

1

At line no: 8 unary_expression : factor 

1

At line no: 8 term : unary_expression 

1

At line no: 8 simple_expression : term 

1

At line no: 8 rel_expression : simple_expression 

1

At line no: 8 logic_expression : rel_expression 

1

At line no: 8 expression : variable ASSIGNOP logic_expression 

a=1

At line no: 8 expression_statement : expression SEMICOLON 

a=1;

At line no: 8 statement : expression_statement 

a=1;

At line no: 8 statements : statements statement 

int a,b,c,i;
int e,f[10],g[11];
a=1;

At line no: 9 variable : ID 

b

At line no: 9 factor : CONST_INT 

2

At line no: 9 unary_expression : factor 

2

At line no: 9 term : unary_expression 

2

At line no: 9 simple_expression : term 

2

At line no: 9 rel_expression : simple_expression 

2

At line no: 9 logic_expression : rel_expression 

2

At line no: 9 expression : variable ASSIGNOP logic_expression 

b=2

At line no: 9 expression_statement : expression SEMICOLON 

b=2;

At line no: 9 statement : expression_statement 

b=2;

At line no: 9 statements : statements statement 

int a,b,c,i;
int e,f[10],g[11];
a=1;
b=2;

At line no: 10 variable : ID 

c

At line no: 10 variable : ID 

a

At line no: 10 factor : variable 

a

At line no: 10 unary_expression : factor 

a

At line no: 10 term : unary_expression 

a

At line no: 10 simple_expression : term 

a

At line no: 10 rel_expression : simple_expression 

a

At line no: 10 logic_expression : rel_expression 

a

At line no: 10 arguments : logic_expression 

a

At line no: 10 variable : ID 

b

At line no: 10 factor : variable 

b

At line no: 10 unary_expression : factor 

b

At line no: 10 term : unary_expression 

b

At line no: 10 simple_expression : term 

b

At line no: 10 rel_expression : simple_expression 

b

At line no: 10 logic_expression : rel_expression 

b

At line no: 10 arguments : arguments COMMA logic_expression 

a,b

At line no: 10 argument_list : arguments 

a,b

At line no: 10 factor : ID LPAREN argument_list RPAREN 

func(a,b)

At line no: 10 unary_expression : factor 

func(a,b)

At line no: 10 term : unary_expression 

func(a,b)

At line no: 10 simple_expression : term 

func(a,b)

At line no: 10 rel_expression : simple_expression 

func(a,b)

At line no: 10 logic_expression : rel_expression 

func(a,b)

At line no: 10 expression : variable ASSIGNOP logic_expression 

c=func(a,b)

At line no: 10 expression_statement : expression SEMICOLON 

c=func(a,b);

At line no: 10 statement : expression_statement 

c=func(a,b);

At line no: 10 statements : statements statement 

int a,b,c,i;
int e,f[10],g[11];
a=1;
b=2;
c=func(a,b);

At line no: 12 type_specifier : FLOAT 

float

At line no: 12 declaration_list : ID 

d

At line no: 12 var_declaration : type_specifier declaration_list SEMICOLON 

float d;

At line no: 12 statement : var_declaration 

float d;

At line no: 12 statements : statements statement 

int a,b,c,i;
int e,f[10],g[11];
a=1;
b=2;
c=func(a,b);
float d;

At line no: 13 compound_statement : LCURL statements RCURL 

{
int a,b,c,i;
int e,f[10],g[11];
a=1;
b=2;
c=func(a,b);
float d;
}

################################

ScopeTable # 3
0 --> 
< d : ID >
Variable
Type: float

1 --> 
< e : ID >
Variable
Type: int

2 --> 
< f : ID >
Array
Type: int
Size: 10

3 --> 
< g : ID >
Array
Type: int
Size: 11

5 --> 
< i : ID >
Variable
Type: int

7 --> 
< a : ID >
Variable
Type: int

8 --> 
< b : ID >
Variable
Type: int

9 --> 
< c : ID >
Variable
Type: int


ScopeTable # 1
1 --> 
< main : ID >
Function Definition
Return Type: void
Number of Parameters: 0
Parameter Details: 
8 --> 
< func : ID >
Function Definition
Return Type: int
Number of Parameters: 2
Parameter Details: int a, float b

################################

Scopetable with ID 3 removed

At line no: 13 func_definition : type_specifier ID LPAREN RPAREN compound_statement 

void main()
{
int a,b,c,i;
int e,f[10],g[11];
a=1;
b=2;
c=func(a,b);
float d;
}

At line no: 13 unit : func_definition 

void main()
{
int a,b,c,i;
int e,f[10],g[11];
a=1;
b=2;
c=func(a,b);
float d;
}

At line no: 13 program : program unit 

int func(int a,float b)
{
return a+b;
}
void main()
{
int a,b,c,i;
int e,f[10],g[11];
a=1;
b=2;
c=func(a,b);
float d;
}

At line no: 13 start : program 

Symbol Table

################################

ScopeTable # 1
1 --> 
< main : ID >
Function Definition
Return Type: void
Number of Parameters: 0
Parameter Details: 
8 --> 
< func : ID >
Function Definition
Return Type: int
Number of Parameters: 2
Parameter Details: int a, float b

################################


Total lines: 13
